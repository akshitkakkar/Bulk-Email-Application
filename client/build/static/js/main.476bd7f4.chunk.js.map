{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","type","payload","data","stop","_x","apply","this","arguments","handleToken","token","_ref2","_callee2","_context2","post","_x2","Payments","_this","react_default","createElement","main_default","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","auth","href","key","components_Payments","style","margin","credits","react_router_dom","to","id","renderContent","Landing","textAlign","Dashboard","SurveryNew","App","components_Header","react_router","exact","path","component","combineReducers","state","length","undefined","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","querySelector","console","log"],"mappings":"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","file":"static/js/main.476bd7f4.chunk.js","sourcesContent":["//action creator\r\n//initiate change at redux side of our app\r\n\r\nimport axios from 'axios';\r\nimport {FETCH_USER} from './types';\r\n\r\nexport const fetchUser = () =>\r\n    async dispatch => { //redux thunk calls this function with dispatch when action creator fetchUser is called\r\n        const res = await axios.get('/api/currentUser')\r\n        dispatch({type: FETCH_USER, payload: res.data});\r\n    } \r\n    //redux thunk dispatch action function\r\n    //don't have to return action in this case unlike vanilla redux\r\n\r\nexport const handleToken = (token) =>\r\n    async dispatch => {\r\n        const res = await axios.post('/api/stripe', token);\r\n        dispatch({type: FETCH_USER, payload: res.data})\r\n    }","export const FETCH_USER = 'fetch_user';","import React, {Component} from 'react'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions'\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return(\r\n            <StripeCheckout\r\n            name=\"Send Bulk Email\"\r\n            description=\"$5 for 5 email credits\"\r\n            amount={500}\r\n            token={token => this.props.handleToken(token)}\r\n            stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n            >\r\n                <button className=\"btn\">Add Credits</button>\r\n            </StripeCheckout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(Payments)","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Payments from './Payments';\r\n\r\n//using class based because we will use helper/functions in here\r\n//easy to organize in class components\r\nclass Header extends Component {\r\n\r\n    renderContent() {\r\n        switch(this.props.auth) {\r\n            case null:\r\n                return;\r\n            case false:\r\n                return (<li>\r\n                    <a href=\"/auth/google\">Login with Google</a>\r\n                </li>)\r\n            default:\r\n                return [\r\n                <li key=\"1\"><Payments/></li>,\r\n                <li key=\"3\" style={{margin: '0 10px'}}>\r\n                    Credits: {this.props.auth.credits}\r\n                </li>,\r\n                <li key=\"2\">\r\n                <a href=\"/api/logout\">Logout</a>\r\n            </li>]\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                <Link to={this.props.auth ? '/surveys' : '/'} \r\n                className=\"left brand-logo\"\r\n                >\r\n                    Emaily\r\n                </Link>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                    {this.renderContent()}\r\n                </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n//hooks component to redux store\r\nfunction mapStateToProps({auth}) { //destructured from state object of redux store\r\n    return { auth }; // destructuring { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <div style={{textAlign: 'center'}}>\r\n            <h1>\r\n                Emaily!\r\n            </h1>\r\n            Collect feedback from your users!\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Landing;","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom'; //heps navigate around browser dom\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\n\r\n\r\nconst Dashboard = () => {\r\n    return(\r\n        <h1>Dashboard</h1>\r\n    )\r\n}\r\nconst SurveryNew = () => {\r\n    return(\r\n        <h1>SurveryNew</h1>\r\n    )\r\n}\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <BrowserRouter>\r\n                <div>\r\n                    <Header/>\r\n                    <Route exact={true} path=\"/\" component={Landing}></Route>\r\n                    <Route exact path=\"/surveys\" component={Dashboard}></Route>\r\n                    <Route path=\"/surverys/new\" component={SurveryNew}></Route>\r\n                </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect(null, actions)(App);","import {combineReducers} from 'redux';\r\nimport authReducder from './authReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducder\r\n});","import {FETCH_USER} from '../actions/types'\r\n\r\nexport default function(state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false; //empty string is a falsey value\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'materialize-css/dist/css/materialize.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App.js';\r\nimport reducers from './reducers'\r\n\r\n//create new instance of redux store\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n//Provider reads changes from redux store and informs\r\n//child components about state change\r\nReactDOM.render(<Provider store = {store}><App/></Provider>, document.querySelector(\"#root\"));\r\n\r\nconsole.log(process.env.REACT_APP_STRIPE_KEY + process.env.NODE_ENV);"],"sourceRoot":""}